************************************        # переменные

-----------------                           # constant
let                                         - константа
let str1 : Character = "a"                  - это характеристика с 1 символом
let array : [CustomStringConvertible] = [5, 5.4, Float(5.4)]  - 

-----------------                           # var
var name                                    - переменная
var red, green, blue: Double                - создание переменных
var letters = Set<Character>()              - создание переменой характеристика с 1 символом

-----------------                           # tuples
let tuple_1 = (name_1:100, name_2:150)      - tuples создание
let a = (1, "Hello", true, 2.4)             - tuples создание
tuple_1.name_1                              - выведет 100
tuple_1.0                                   - выведет 100
tuple_1.name_1 = 2                          - изменить name_1 в тюплз вместо 100, станет 2

  -----------------                           # пример 3
  let tuple_1 = (x:1, y:2)                    // создали tuple_1 с одинаковыми названиями как у tuple_2
  var tuple_2 = (x:4, y:3)                    // создали tuple_2 с одинаковыми названиями как у tuple_1
  tuple_2 = tuple_1                           // так можно (если в тюплз совпадают название и количество параметров!)

-----------------                           # цифровые параметры и остальные
Int                                         - цифры (округляет до целого числа, в меньшую сторону всегда)
Float                                       - число, с плавающей запятой 32 битное, до 6 разрядов после запятой
Double                                      - число, с плавающей запятой 64 битное, до 15 значений после запятой
String                                      - строка
Character                                   - характеристика с 1 символом
CustomStringConvertible                     - все возможные характеристики, какие только могут быть!


************************************        # опционал
(?) Еесли переменной задаём свойство с вопросительным знаком - это означает, что переменная может быть иногда nil!
(!) А если с восклицательным знаком - то nil'а не может быть!

-----------------                           # восклицательный знак, наоборот (меняет сзначение, наоборот true/falce)
let good = true                             // создали переменную
!good                                       // falce и не меняет оператор
good = !good                                // falce и меняет оператор


************************************        # работа с текстом
print()                                     - всё выводит в одну строку
print((a,b))                                - вывести переменные a,b
println()                                   - переносит на следующую строку (уже не актуально)
/()                                         - интерполяция, делается в текстовом формате "/()" для вывода переменной
printin("Red color \(redColor)")            - (cmd) Red color red
//                                          - это комментарий
/*                                          - это тоже комментарий,
но написанный на двух строках */

-----------------
\ 0 (нулевой символ), 
\\ (обратный слэш), 
\t (горизонтальная табуляция), 
\n (новая строка), 
\r (возвращение каретки), 
\ "(двойные кавычки) и \' (одиночные кавычки )

-----------------
Произвольные скалярные величины Юникода, записанные в виде \u{n} , где n - 1-8 значное шестнадцатиричное число со значением, равным действительной точке кода Юникода.